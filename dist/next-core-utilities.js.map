{"version":3,"sources":["webpack://next-core-utilities/webpack/universalModuleDefinition","webpack://next-core-utilities/webpack/bootstrap","webpack://next-core-utilities/./src/isObject.js","webpack://next-core-utilities/./src/isFunction.js","webpack://next-core-utilities/./src/before.js","webpack://next-core-utilities/./src/index.js","webpack://next-core-utilities/./src/isString.js","webpack://next-core-utilities/./src/extend.js","webpack://next-core-utilities/./src/pad.js","webpack://next-core-utilities/./src/uniqueId.js","webpack://next-core-utilities/./src/has.js","webpack://next-core-utilities/./src/allKeys.js","webpack://next-core-utilities/./src/create.js","webpack://next-core-utilities/./src/result.js","webpack://next-core-utilities/./src/arrayHas.js","webpack://next-core-utilities/./src/exec.js","webpack://next-core-utilities/./src/isDefined.js","webpack://next-core-utilities/./src/some.js","webpack://next-core-utilities/./src/splice.js","webpack://next-core-utilities/./src/once.js","webpack://next-core-utilities/./src/fibonacci.js","webpack://next-core-utilities/./src/utility.js","webpack://next-core-utilities/./src/sort.js","webpack://next-core-utilities/./src/formatDate.js","webpack://next-core-utilities/./src/formatBinary.js","webpack://next-core-utilities/./src/filter.js","webpack://next-core-utilities/./src/sizeOf.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","type","before","nn","func","TypeError","Number","result","shuffle","prettyPrint","binarySearch","TransformerType","Transformer","wrap","filterObject","findByMatchingProperties","sortObjects","mergeSort","quickSort","insertionSort","bubbleSort","formatDate","formatBinary","binaryToHex","isString","isFunction","extend","pad","uniqueId","has","isObject","allKeys","arrayHas","exec","isDefined","some","splice","once","filter","fibonacci","fibonacciSequence","sizeOf","formatByteSize","memorySizeOf","val","args","str","padLeft","idCounter","prefix","obj","props","arr","functionName","context","namespaces","Array","array","insert","at","Math","tail","length","phi","asymp","fib","nArray","j","temp","spaces","number","x","repeat","JSON","find","comparator","low","high","comparison","constructor","out","source","String","parseInt","Boolean","fn","concat","keys","newObject","set","properties","every","entry","sort","a","b","y","middle","left","right","merge","indexLeft","indexRight","pivot","sortedList","len","unsortedList","tmp","sorted","swapped","date","noTime","year","month","day","hour","minute","num","pres","nFlag","nShifted","sMask","createBinaryString","binary","zero","char","bytes","objClass"],"mappings":"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","file":"next-core-utilities.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"next-core-utilities\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"next-core-utilities\"] = factory();\n\telse\n\t\troot[\"next-core-utilities\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/**\n * isObject\n * @param {object} obj The input object\n * @returns {boolean} Returns true of the param is an object\n */\nconst isObject = (obj) => {\n  const type = typeof obj;\n  return (type === \"function\" || type === \"object\" && !!obj);\n};\n\nexport default isObject;\n","/**\n * isFunction -\n * returns true if called name is a function\n * simular to jQuery .isFunction method\n * @param {function} name The name of the function to test\n * @returns true if called name is a function\n */\nconst isFunction = (name) => {\n  return Object.prototype.toString.call(name) == \"[object Function]\";\n};\n\nexport default isFunction;\n","const before = (nn, func) => {\n  let result, n;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = Number.parseInt(nn);\n  return () => {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n};\n\nexport default before;\n","import isString from \"./isString.js\";\nimport isFunction from \"./isFunction.js\";\nimport extend from \"./extend.js\";\nimport pad from \"./pad.js\";\nimport uniqueId from \"./uniqueId.js\";\nimport has from \"./has.js\";\nimport isObject from \"./isObject.js\";\nimport allKeys from \"./allKeys.js\";\nimport create from \"./create.js\";\nimport result from \"./result.js\";\nimport arrayHas from \"./arrayHas.js\";\nimport exec from \"./exec.js\";\nimport isDefined from \"./isDefined.js\";\nimport some from \"./some.js\";\nimport splice from \"./splice.js\";\nimport before from \"./before.js\";\nimport once from \"./once.js\";\nimport { fibonacci, fibonacciSequence } from \"./fibonacci.js\";\n\nimport { shuffle, prettyPrint, binarySearch, TransformerType, Transformer, wrap, filterObject, findByMatchingProperties } from \"./utility.js\";\nimport { sortObjects, mergeSort, quickSort, insertionSort, bubbleSort } from \"./sort.js\";\n\nimport formatDate from \"./formatDate.js\";\nimport { formatBinary, binaryToHex } from \"./formatBinary.js\";\n\nimport filter from \"./filter.js\";\n\nimport { sizeOf, formatByteSize, memorySizeOf } from \"./sizeOf.js\";\n\nmodule.exports.shuffle = shuffle;\nmodule.exports.prettyPrint = prettyPrint;\nmodule.exports.binarySearch = binarySearch;\nmodule.exports.TransformerType = TransformerType;\nmodule.exports.Transformer = Transformer;\nmodule.exports.wrap = wrap;\nmodule.exports.filterObject = filterObject;\nmodule.exports.findByMatchingProperties = findByMatchingProperties;\n\nmodule.exports.sortObjects = sortObjects;\nmodule.exports.mergeSort = mergeSort;\nmodule.exports.quickSort = quickSort;\nmodule.exports.insertionSort = insertionSort;\nmodule.exports.bubbleSort = bubbleSort;\n\nmodule.exports.formatDate = formatDate;\nmodule.exports.formatBinary = formatBinary;\nmodule.exports.binaryToHex = binaryToHex;\n\nmodule.exports.isString = isString;\nmodule.exports.isFunction = isFunction;\nmodule.exports.extend = extend;\nmodule.exports.pad = pad;\nmodule.exports.uniqueId = uniqueId;\nmodule.exports.has = has;\nmodule.exports.isObject = isObject;\nmodule.exports.allKeys = allKeys;\nmodule.exports.create = create;\nmodule.exports.result = result;\nmodule.exports.arrayHas = arrayHas;\nmodule.exports.exec = exec;\nmodule.exports.isDefined = isDefined;\nmodule.exports.some = some;\nmodule.exports.splice = splice;\nmodule.exports.before = before;\nmodule.exports.once = once;\nmodule.exports.filter = filter;\n\nmodule.exports.fibonacci = fibonacci;\nmodule.exports.fibonacciSequence = fibonacciSequence;\n\nmodule.exports.sizeOf = sizeOf;\nmodule.exports.formatByteSize = formatByteSize;\nmodule.exports.memorySizeOf = memorySizeOf;\n","/**\n * isString -\n * checks if a value is a String\n * @param {string} variable to check\n * @returns {boolean} true if value is a string\n */\nconst isString = (val) => {\n  return (typeof val === \"string\") || ((!!val && typeof val === \"object\") && Object.prototype.toString.call(val) === \"[object String]\");\n};\n\nexport default isString;\n","const extend = (...args) => {\n  let i = 0;\n  const l = args.length;\n  for (i = 1; i < l; i++) {\n    let key;\n    for(key in args[i]) {\n      if(args[i].hasOwnProperty(key)) {\n        args[0][key] = args[i][key];\n      }\n    }\n  }\n  return args[0];\n};\n\nexport default extend;\n","const pad = (p, str, padLeft) => {\n  if (typeof str === \"undefined\") {\n    return p;\n  }\n  if (padLeft) {\n    return `${p}${str}`;\n  } else {\n    return `${str}${p}`;\n  }\n};\n\nexport default pad;\n","let idCounter = 0;\n\nconst uniqueId = (prefix) => {\n  const id = ++idCounter;\n  return `${prefix}${id}`;\n};\n\nexport default uniqueId;\n","/**\n * has\n * @param {object} obj The input object\n * @param {object} key The test key\n * @returns {boolean} Returns true of the key exists\n */\nconst has = (obj, key) => {\n  return obj !== null && hasOwnProperty.call(obj, key);\n};\n\nexport default has;\n","import isObject from \"./isObject.js\";\n\n/**\n * Augmented.allKeys\n * @method allKeys\n * @memberof Augmented\n * @param {object} obj The input object\n * @returns {array} Returns the array of ALL keys including prototyped\n */\nconst allKeys = (obj) => {\n  if (!isObject(obj)) {\n    return [];\n  }\n  return Object.getOwnPropertyNames(obj);\n};\n\nexport default allKeys;\n","import isObject from \"./isObject.js\";\n\nconst result = (prototype) => {\n  if (!isObject(prototype)) {\n    return {};\n  }\n  return Object.create(prototype);\n};\n\n/**\n * Augmented.create\n * @method create\n * @memberof Augmented\n * @param {object} prototype The input prototype\n * @param {object} props The properties (optional)\n * @returns {object} Returns the created object\n */\nconst create = (prototype, props) => {\n  const o = result(prototype);\n  if (props) {\n    Object.assign(o, props);\n  }\n  return o;\n};\n\nexport default create;\n","import isFunction from \"./isFunction.js\";\n\n/**\n * Augmented.result - returns named property in an object\n * simular to underscore .result method\n * @function result\n * @memberof Augmented\n * @returns named property in an object\n */\nconst result = (object, property) => {\n  if (object === null) {\n    return;\n  }\n  const value = object[property];\n  return isFunction(value) ? value.call(object) : value;\n};\n\nexport default result;\n","/**\n * Array.has - returns is a property is in the array (very fast return)\n * @function arrayhas\n * @memberof Augmented\n * @param {array} arr Source array\n * @param {object} key Key to test for\n * @returns true if property is included in an array\n */\nconst arrayHas = (arr, key) => {\n  return (arr.indexOf(key) !== -1);\n};\n\nexport default arrayHas;\n","/**\n * exec method - Execute a function by name\n * @param {string} functionName The name of the function\n * @param {object} context The context to call from\n * @param {object} args Arguments\n */\nconst exec = (functionName, context, ...args) => {\n  const //args = Array.prototype.slice.call(arguments, 2),\n        namespaces = functionName.split(\".\"),\n        func = namespaces.pop(),\n        l = namespaces.length;\n  let i = 0;\n  for (i = 0; i < l; i++) {\n    context = context[namespaces[i]];\n  }\n  return context[func].apply(context, args);\n};\n\nexport default exec;\n","/**\n * isDefined - Checks and returns if a passed variable is defined\n * @param {string} variable to check\n * @returns {boolean} true if value is defined\n */\nconst isDefined = (val) => {\n  return typeof val != \"undefined\";\n};\n\nexport default isDefined;\n","const some = (arr, func) => {\n  if (Array.isArray(arr)) {\n    return arr.some(func);\n  }\n  return false;\n};\n\nexport default some;\n","// Splices `insert` into `array` at index `at`.\nconst splice = (array, insert, at) => {\n  at = Math.min(Math.max(at, 0), array.length);\n  let tail = Array(array.length - at);\n  const length = insert.length;\n  let i;\n  for (i = 0; i < tail.length; i++) {\n    tail[i] = array[i + at];\n  }\n  for (i = 0; i < length; i++) {\n    array[i + at] = insert[i];\n  }\n  for (i = 0; i < tail.length; i++) {\n    array[i + length + at] = tail[i];\n  }\n};\n\nexport default splice;\n","import before from \"./before.js\";\n\nconst once = (func) => {\n  return before(2, func);\n};\n\nexport default once;\n","export const fibonacci = (n) => {\n  const phi = (1 + Math.sqrt(5))/2;\n  const asymp = Math.pow(phi, n) / Math.sqrt(5);\n  return Math.round(asymp);\n};\n\nexport const fibonacciSequence = (l) => {\n  const fib = [];\n  let i = 0;\n  for(i = 0; i < l; i++) {\n    fib.push(fibonacci(i));\n  }\n  return fib;\n};\n","/**\n * Shuffles an Array with Fisher-Yates Shuffle algorithm\n *\n * @param {array} array The array to shuffle\n * @returns {array} A new shuffled array\n */\nexport const shuffle = (array) => {\n  const nArray = array.slice(0), l = array.length;\n  let i = 0, temp, j;\n  for (i = l - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = nArray[i];\n    nArray[i] = nArray[j];\n    nArray[j] = temp;\n  }\n  return nArray;\n};\n\n/**\n * Prints an object nicely\n *\n * @param {object} obj The object to print\n * @param {boolean} spaces Use spaces instead of tabs\n * @returns {number} number The number of spaces to pad\n */\nexport const prettyPrint = (obj, spaces, number) => {\n  let x = \"\\t\";\n  if (spaces) {\n    x = \" \".repeat(number);\n  }\n  return JSON.stringify(obj, null, x);\n};\n\n/**\n * Performs a binary search on the host array. vs indexOf<br/>\n * Binary Search is a complexity of <em>O(n log n)</em> vs <em>O(n)</em> with indexOf\n *\n * @param {Array} arr The array.\n * @param {Any} find The item to search for within the array.\n * @param {function} comparator The comparator to use\n * @returns {Number} The index of the element which defaults to -1 when not found.\n */\nexport const binarySearch = (arr, find, comparator) => {\n  let low = 0, high = arr.length - 1, i, comparison;\n\n  while (low <= high) {\n    i = Math.floor((low + high) / 2);\n    comparison = comparator(arr[i], find);\n    if (comparison < 0) {\n      low = i + 1; continue;\n    }\n    if (comparison > 0) {\n      high = i - 1; continue;\n    }\n    return i;\n  }\n  return null;\n};\n\n/**\n * Augmented.Utility.TransformerType <br/>\n * Transformer type for use in the transformer\n * @enum {Symbol} Augmented.Utility.TransformerType\n * @name TransformerType\n *\n * @property {Symbol} String Standard String\n * @property {Symbol} Integer Integer\n * @property {Symbol} Number Any number\n * @property {Symbol} Boolean True/False\n * @property {Symbol} Array Stanrdard Array\n * @property {Symbol} Object Any Object\n * @property {Symbol} Null Null\n */\nexport const TransformerType = {};\nTransformerType.STRING = Symbol(\"String\");\nTransformerType.INTEGER = Symbol(\"Integer\");\nTransformerType.NUMBER = Symbol(\"Number\");\nTransformerType.BOOLEAN = Symbol(\"Boolean\");\nTransformerType.ARRAY = Symbol(\"Array\");\nTransformerType.OBJECT = Symbol(\"Object\");\nTransformerType.NULL = Symbol(\"Null\");\n\n/**\n * Augmented.Utility.Transformer <br/>\n * Transform an object, type, or array to another type, object, or array\n *\n */\nexport class Transformer {\n  constructor() {\n    this.type = TransformerType;\n  };\n\n  /**\n   * The transformer type enum\n   * @propery type The transformer type enum\n   * @type {Augmented.Utility.TransformerType}\n   */\n\n  /**\n   * Transform an object, primitive, or array to another object, primitive, or array\n   * @param {object} source Source primitive to transform\n   * @param {Augmented.Utility.TransformerType} type Type to transform to\n   * @returns {object} returns a transformed object or primitive\n   */\n  static transform(source, type) {\n    let out = null;\n    switch(type) {\n      case TransformerType.STRING:\n      if (typeof source === \"object\") {\n        out = JSON.stringify(source);\n      } else {\n        out = String(source);\n      }\n      break;\n      case TransformerType.INTEGER:\n      out = parseInt(source);\n      break;\n      case TransformerType.NUMBER:\n      out = Number(source);\n      break;\n      case TransformerType.BOOLEAN:\n      out = Boolean(source);\n      break;\n      case TransformerType.ARRAY:\n      if (!Array.isArray(source)) {\n        out = [];\n        out[0] = source;\n      } else {\n        out = source;\n      }\n      break;\n      case TransformerType.OBJECT:\n      if (typeof source !== \"object\") {\n        out = {};\n        out[source] = source;\n      } else {\n        out = source;\n      }\n      break;\n    }\n    return out;\n  };\n\n  /**\n   * Returns a Augmented.Utility.TransformerType of a passed object\n   * @param {object} source The source primitive\n   * @returns {Augmented.Utility.TransformerType} type of source as Augmented.Utility.TransformerType\n   */\n  static isType(source) {\n    if (source === null) {\n      return TransformerType.NULL;\n    } else if (typeof source === \"string\") {\n      return TransformerType.STRING;\n    } else if (typeof source === \"number\") {\n      return TransformerType.NUMBER;\n    } else if (typeof source === \"boolean\") {\n      return TransformerType.BOOLEAN;\n    } else if (Array.isArray(source)) {\n      return TransformerType.ARRAY;\n    } else if (typeof source === \"object\") {\n      return TransformerType.OBJECT;\n    }\n  }\n};\n\n/**\n * Wrap method to handle wrapping functions (simular to _.wrap)\n *\n */\nexport const wrap = (fn, wrap) => {\n  return () => {\n    return wrap.apply(this, [fn].concat(Array.prototype.slice.call(arguments)));\n  };\n};\n\n/**\n * filter an object from array of values\n *\n * @param {object} object Object to filter\n * @param {array} keys keys to filter from the object\n * @returns {object} returns a new object with only these keys\n *\n */\nexport const filterObject = (object, keys) => {\n  const newObject = {};\n  if (object && keys) {\n    const l = keys.length;\n    let i = 0;\n    for (i = 0; i < l; i++) {\n      newObject[keys[i]] = object[keys[i]];\n    }\n  }\n  return newObject;\n};\n\n/**\n * find an oject from matching properties\n *\n * @param {Array} set array/set of objects\n * @param {object} properties properties to find by\n * @returns {array} returns a the objects that matched\n *\n */\nexport const findByMatchingProperties = (set, properties) => {\n  return set.filter( (entry) => {\n    return Object.keys(properties).every( (key) => {\n      return entry[key] === properties[key];\n    });\n  });\n};\n","/**\n * Sorts an array of objects by propery in object\n * @function sortObjects\n * @memberof Utility\n * @param {array} array The object array to sort\n * @param {object} key The property to sort by\n * @returns {array} The sorted array\n */\nexport const sortObjects = (array, key) => {\n  return array.sort( (a, b) => {\n    const x = a[key], y = b[key];\n    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n};\n\n/**\n * Split the array into halves and merge them recursively\n * @function mergeSort\n * @memberof Utility\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const mergeSort = (arr) => {\n  if (arr.length === 1) {\n    // return once we hit an array with a single item\n    return arr;\n  }\n\n  const middle = Math.floor(arr.length / 2); // get the middle item of the array rounded down\n  const left = arr.slice(0, middle); // items on the left side\n  const right = arr.slice(middle); // items on the right side\n\n  return merge(mergeSort(left), mergeSort(right));\n};\n\n/*\n * compare the arrays item by item and return the concatenated result\n */\nconst merge = (left, right) => {\n  let result = [];\n  let indexLeft = 0;\n  let indexRight = 0;\n\n  while (indexLeft < left.length && indexRight < right.length) {\n    if (left[indexLeft] < right[indexRight]) {\n      result.push(left[indexLeft]);\n      indexLeft++;\n    } else {\n      result.push(right[indexRight]);\n      indexRight++;\n    }\n  }\n  return result.concat(left.slice(indexLeft)).concat(right.slice(indexRight));\n};\n\n/**\n * Quick Sort implimentation for Arrays -\n * @function QuickSort\n * @memberof Utility\n * @param {Array} arr Array to Sort\n * @returns {Array} Returns a sorted array\n */\nexport const quickSort = (arr) => {\n  //if array is empty\n  if (arr.length === 0) {\n    return [];\n  }\n\n  let i = 1;\n  const l = arr.length, left = [], right = [], pivot = arr[0];\n  //go through each element in array\n  for (i = 1; i < l; i++) {\n    if (arr[i] < pivot) {\n      left.push(arr[i]);\n    } else {\n      right.push(arr[i]);\n    }\n  }\n  return quickSort(left).concat(pivot, quickSort(right));\n};\n\n/**\n * Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time.\n * It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.\n * @function mergeSort\n * @memberof Utility\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const insertionSort = (unsortedList) => {\n  let sortedList = [];\n  if (unsortedList) {\n    sortedList = unsortedList.slice();\n    const len = sortedList.length;\n    let i, j, tmp;\n  \tfor (i = 1; i < len; i++) {\n  \t\ttmp = sortedList[i]; //Copy of the current element.\n  \t\t/*Check through the sorted part and compare with the number in tmp. If large, shift the number*/\n  \t\tfor (j = i - 1; j >= 0 && (sortedList[j] > tmp); j--) {\n  \t\t\t//Shift the number\n  \t\t\tsortedList[j + 1] = sortedList[j];\n  \t\t}\n  \t\t//Insert the copied number at the correct position\n  \t\t//in sorted part.\n  \t\tsortedList[j + 1] = tmp;\n  \t}\n  }\n\treturn sortedList;\n};\n\n/**\n * Simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order.\n * @function mergeSort\n * @memberof Utility\n * @param {array} array The array to sort\n * @returns {array} The sorted array\n */\nexport const bubbleSort = (a) => {\n  let sorted = [];\n  if (a) {\n    sorted = a.slice();\n    let swapped, i, tmp;\n    const l = sorted.length - 1;\n    do {\n      swapped = false;\n      for (i = 0; i < l; i++) {\n        if (sorted[i] > sorted[i + 1]) {\n          tmp = sorted[i];\n          sorted[i] = sorted[i + 1];\n          sorted[i + 1] = tmp;\n          swapped = true;\n        }\n      }\n    } while (swapped);\n  }\n  return sorted;\n};\n","/**\n * Format a date to US format (MM/DD/YYYY HH:mm AM/PM) or (MM/DD/YYYY) only\n * @param {date} date The date to format\n * @param {boolean} noTime Exclude the time\n * @returns {string} The formatted date\n */\nconst formatDate = (date, noTime) => {\n  const year = date.getFullYear(),\n    month = date.getMonth() + 1, // months are zero indexed\n    day = date.getDate(),\n    hour = date.getHours(),\n    minute = date.getMinutes(),\n    second = date.getSeconds(),\n    hourFormatted = hour % 12 || 12, // hour returned in 24 hour format\n    minuteFormatted = minute < 10 ? \"0\" + minute : minute,\n    morning = hour < 12 ? \"am\" : \"pm\";\n  if (noTime) {\n    return `${month}/${day}/${year}`;\n  }\n  return `${month}/${day}/${year} ${hourFormatted}:${minuteFormatted}${morning}`;\n};\n\nexport default formatDate;\n","const createBinaryString = (nMask) => {\n  // nMask must be between -2147483648 and 2147483647\n  let nFlag = 0, nShifted = nMask, sMask = '';\n  for (nFlag = 0; nFlag < 32;\n       nFlag++, sMask += String(nShifted >>> 31), nShifted <<= 1);\n  return sMask;\n};\n\n/**\n * Format a number into binary string at a set precision\n * @function formatBinary\n * @memberof Utility\n * @param {num} num The number to format\n * @param {pres} pres The bit precision\n * @returns {string} The formatted binary string\n */\nexport const formatBinary = (num, pres) => {\n  return createBinaryString(num).split(\"\").reverse().join(\"\").substring(0, pres);\n};\n\n/**\n * Format a binary string into a hex value (two characters)\n * @function binaryToHex\n * @memberof Utility\n * @param {binary} binary The 8-bit binary string to return as hex characters\n * @param {pad} pad Add a zero if under '10'\n * @returns {string} The hex value\n */\nexport const binaryToHex = (binary, pad) => {\n  const num = parseInt(binary.split(\"\").reverse().join(\"\"), 2);\n  let zero = \"\";\n  if (num < 16 && pad) {\n    zero = \"0\";\n  }\n  return `${zero}${num.toString(16)}`;\n};\n","/**\n * Filter a string by removing a char\n * @param {string} str The string\n * @param {string} char The char\n * @returns {string} The filtered string\n */\nconst filter = (str, char) => {\n  if (str && char) {\n    return [].filter.call(str, c => c != char).join(\"\");\n  }\n  return null;\n};\n\nexport default filter;\n","/**\n * Returns the size in bytes of an object\n * @function sizeOf\n * @returns {Number} size in bytes\n */\nconst sizeOf = (obj) => {\n  let bytes = 0;\n  if (obj !== null && obj !== undefined) {\n    switch(typeof obj) {\n      case \"number\":\n      bytes += 8;\n      break;\n      case \"string\":\n      bytes += obj.length * 2;\n      break;\n      case \"boolean\":\n      bytes += 4;\n      break;\n      case \"object\":\n      let objClass = Object.prototype.toString.call(obj).slice(8, -1);\n      if (objClass === \"Object\" || objClass === \"Array\") {\n        let key = null;\n        for (key in obj) {\n          if (!obj.hasOwnProperty(key)) continue;\n          bytes += sizeOf(obj[key]);\n        }\n      } else bytes += obj.toString().length * 2;\n      break;\n    }\n  }\n  return bytes;\n};\n\n/**\n * Returns the number (in bytes) as a human readable string\n * @function formatByteSize\n * @returns {String} size in formated human readable string\n */\nconst formatByteSize = (bytes) => {\n  if (bytes < 1024) return bytes + \" bytes\";\n  else if (bytes < 1048576) return (bytes / 1024).toFixed(3) + \" KB\";\n  else if (bytes < 1073741824) return (bytes / 1048576).toFixed(3) + \" MB\";\n  else return (bytes / 1073741824).toFixed(3) + \" GB\";\n};\n\n/**\n * Returns the object size as a human readable string\n * @function memorySizeOf\n * @returns {String} size in formated human readable string\n */\nconst memorySizeOf = (obj) => {\n  return formatByteSize(sizeOf(obj));\n};\n\nexport { sizeOf, formatByteSize, memorySizeOf };\n"],"sourceRoot":""}